# 开发环境
spring:

  # DataSource
  datasource:
    driver-class-name: org.h2.Driver
    #数据库支持多种连接模式和连接设置，不同的连接模式和连接设置是通过不同的URL来区分的，URL中的设置是不区分大小写
    # 使用内存数据库（命名模式）
    url: jdbc:h2:mem:testdb;MODE=Oracle
    # 指定生成数据库的schema文件位置
    schema: classpath:/sql/schema.sql
    # 指定插入数据库语句的脚本位置
    data: classpath:/sql/test-data.sql

    # Pools
    tomcat:
      # 指定连接池最大的空闲连接数量.
      max-idle: 10
      # 指定必须保持连接的最小值(For DBCP and Tomcat connection pools)
      min-idle: 5
      # 指定连接池等待连接返回的最大等待时间，毫秒单位
      max-wait: 10000
      # 指定启动连接池时，初始建立的连接数量
      initial-size: 5
      # 指定获取连接时连接校验的sql查询语句
      validation-query: SELECT 1
      # 当从连接池借用连接时，是否测试该连接
      test-on-borrow: false
      # 当连接空闲时，是否执行连接测试.
      test-while-idle: true
      # 指定空闲连接检查、废弃连接清理、空闲连接池大小调整之间的操作时间间隔
      time-between-eviction-runs-millis: 18800
      # 使用Tomcat connection pool时，指定jdbc拦截器，分号分隔
      jdbc-interceptors: ConnectionState;SlowQueryReport(threshold=1)

  # Spring Data JPA
  jpa:
    # 指定数据库类型
    database: h2
    # 打印sql
    show-sql: true
    hibernate:
      # 根据model类会自动建立（更新）表的结构
      ddl-auto: update
      naming:
        # 表字段生成策略
        strategy: org.hibernate.cfg.ImprovedNamingStrategy
    # 设置hibernate方言
    database-platform: org.hibernate.dialect.H2Dialect

  # Redis
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    host: 127.0.0.1
    port: 6379
    password:
    pool:
      # 连接池最大连接数（使用负值表示没有限制）
      max-active: 8
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      # 连接池中的最大空闲连接
      max-idle: 8
      # 连接池中的最小空闲连接
      min-idle: 0
    # 连接超时时间（毫秒）
    timeout: 0

  # H2 Console 配置
  h2:
    # 开启H2控制台功能和访问地址。
    console:
      enabled: true
      path: /h2-console



